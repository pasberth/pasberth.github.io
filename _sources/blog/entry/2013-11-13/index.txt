OCaml はサイコー
================================================================================

OCaml はサイコーだ．そこで，ぼくの考える OCaml のサイコーなところを書いて
みようと思う．関数型言語に興味があるけど，なに使えばいいのかわからない，とかいうときに
参考にしてほしい．

* 静的型付き言語だ．たとえば，整数と文字列を足すだとか，オブジェクト(ハッシュ，マップみたいな
  構造)と配列とまちがえて渡してしまう，なんてくだらないバグはコンパイル時にわかる．
  そういうバグは動的言語を使っている限り避けられない宿命だと思う (あと，一部のダウンキャスト
  できるタイプのオッブジェクト指向言語でもよくあるかもな)．もしそういうバグに遭遇したことが
  ないとすればマジで神がかった素質だから自力で型システムを実装してみるといいと思う．
  しかし OCaml を使えばそんなバグとはオサラバできる．静的型はサイコーだ．

* 型を書かなくてもいい．静的型付き言語と言って， Java みたいな型を明示しまくる言語を
  思い浮かべたとしたら明らかな誤解だ．型推論(型再構築)というものがあって，型を書かなくても
  いいのだ．まったく，型推論はサイコーだぜ．それに，これは体感の話だけど， OCaml の型推論は
  Haskell と比べてもかなり強力だ． Ruby, Python, Perl, あるいは， PHP ……関数型言語では
  Scheme や Clojure ，オブジェクト指向言語では， IoLanguage なんてものもあるけど，
  そんな動的言語と比べても，コードの上では遜色がない．もし，型を書くのがめんどくさいという
  理由で静的型付き言語より動的言語を好んでいるなら今すぐ考えを改めて OCaml を使ってみる
  べきだ．本当に型を書かないから．

  * そのくせ，強力な静的型を持っているから，型を書いていないのに型エラーを指摘してくれるんだ
    よ．不思議なことに．バグを静的に探してくれるんだ．サイコーと思わない？

* 副作用が使える．関数型言語の特徴とか，重要な点として，純粋であるとか，副作用がないなんてこと
  を持ち出す人もいるけど，それは誤報だ． OCaml は，いわゆる副作用を許している．
  プログラムのほとんどは副作用でつくられる．副作用はサイコーだ．すごく書きやすい．

* 周辺ツールが便利．

  * たとえば， opam が便利． opam というのは， Ruby でいえば gem ，
    Python でいえば pip に相当するものだ．これは本当の話なんだけど，ぼくは Haskell という
    言語は好きだけどマジで cabal が嫌いだ．だってすぐぶっ壊れるんだもん．その点， opam は
    サイコーだ．

  * たとえば， OMake が便利． OMakefile に OCamlProgram(hoge, hoge) などと
    書いて omake hoge とコマンドを入力すると依存関係とか解析してくれて hoge.ml をコンパイル
    してくれる． OMake はサイコーだ．Makefile と違うのかって？　OCaml プログラムのコンパイルを
    するのに便利だけど， OMake は 汎用的だから似たような用途にも使える．しかし，じつは，
    OMakefile も静的型付き言語なのだ(もちろん，型推論付きだ！　型なんて書かないから
    Makefile と同様に使えるけど，じつは型付けてくれているのだ！！)．だから OMakefile
    を書くこと自体をミスってもくだらないことならすぐわかる．

  * :doc:`/blog/entry/2013-11-12/index` で書いた， js_of_ocaml というものを
    使うと， OCaml を JavaScript にコンパイルしたりできる．これはマジでサイコーでしょ．

  * `Try OCaml <http://try.ocamlpro.com>`_ というサイトがある．これはマジでサイコーだ．
    簡単な問題を出して OCaml のまったく新しい体験をすることができる．なに？　英語ができない？
    大丈夫，オレもできないが Feeling で読めたぜ．オレはこのサイトを女子大生に紹介したんだが，
    このサイトのおかげでマジで楽しんでもらえたしマジで彼女ができた．まったく，サイコーだぜ．

* Coq の実装に使われていたり，型システム入門の言語として使用されている．

  * これはぼく個人の(おそらくかなりニッチな)趣向によるものだ．気にしないで頂きたい．
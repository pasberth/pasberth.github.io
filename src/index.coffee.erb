CSS_PATTERNS = [
  <%
  ENV["LIFEGAME_CSS"].split(':').each do |lst|
  %>

    [

    <%
    lst.split(',').map(&:inspect).each do |css| %>
        <%= css %><%
    end
    %>

    ]

  <%
  end
  %>
]

INITIAL_PATTERNS = [

  <%
  ENV["LIFEGAME_INIT"].split(':').each do |path|
  %>

    [

    <%
    File.read(path).split(/\n/).each_with_index do |l, y|
      l.strip.chars.with_index do |c, x|
        if c !~ /\s|_/ then %>
        [<%= x %>, <%= y %>]<%
        end
      end
    end
    %>

    ]

  <% end %>
]

LifeGameControlHTML = ""
LifeGameControlHTML += '<section class="content">'
LifeGameControlHTML += '<header><h1 class="content-title">Life Game</h1></header>'
LifeGameControlHTML += '<div id="lifegame-control">'
LifeGameControlHTML += '<% for i in ENV["X"].to_i.times %><% for j in ENV["Y"].to_i.times %><div id="lifegame-control-<%= i %>-<%= j %>-wrapper"><div id="lifegame-control-<%= i %>-<%= j %>" class="lifegame-control-dead"></div></div><% end %><% end %>'
LifeGameControlHTML += '</div>'
LifeGameControlHTML += '</section>'


jQuery ($) ->
    $("#contents").after LifeGameControlHTML

    for i in [ 0 .. <%= ENV["X"].to_i - 1 %> ]
        for j in [ 0 .. <%= ENV["Y"].to_i - 1 %> ]
            fn = ((lifeGameId, lifeGameControlId) -> () ->
                      $(lifeGameId).attr("isLive", "true").removeClass("lifegame-live lifegame-dead").addClass("lifegame-born")
                      $(lifeGameControlId).removeClass("lifegame-control-dead").addClass("lifegame-control-live")) "#lifegame-#{i}-#{j}", "#lifegame-control-#{i}-#{j}"
            $("#lifegame-control-#{i}-#{j}-wrapper").mousemove(fn)

jQuery ($) ->

    csses = CSS_PATTERNS[parseInt(Math.random() * CSS_PATTERNS.length)]

    for css in csses
        $("head").append "<link rel='stylesheet' type='text/css' href='css/#{css}' />"

    for css in csses
        $("#contents > ul").append "<li><a href=\"usercss/#{css}\">#{document.domain}/usercss/#{css}</a></li>"

jQuery ($) ->
    initialPattern = INITIAL_PATTERNS[parseInt(Math.random() * INITIAL_PATTERNS.length)]
    for index in initialPattern
        i = index[0]
        j = index[1]
        $("#lifegame-#{i}-#{j}").attr("isLive", "true").removeClass("lifegame-dead").addClass("lifegame-live")
        $("#lifegame-control-#{i}-#{j}").addClass "lifegame-control-live"

jQuery ($) ->
    cellList = []
    whenBorn = (cell) ->
        $(cell).attr("isLive", "true").removeClass("lifegame-dead").addClass("lifegame-born")
        $(cell.replace "lifegame", "lifegame-control").removeClass("lifegame-control-dead").addClass("lifegame-control-live")
    whenLive = (cell) ->
        $(cell).removeClass("lifegame-born").addClass("lifegame-live")
        $(cell.replace "lifegame", "lifegame-control").removeClass("lifegame-control-dead").addClass("lifegame-control-live")
    whenDead = (cell) ->
        $(cell).attr("isLive", "false").removeClass("lifegame-live lifegame-born").addClass("lifegame-dead")
        $(cell.replace "lifegame", "lifegame-control").removeClass("lifegame-control-live").addClass("lifegame-control-dead")

    for i in [ 0 .. <%= ENV["X"].to_i - 1 %> ]
        for j in [ 0 .. <%= ENV["Y"].to_i - 1 %> ]
            cellList.push(
              new LifeGame.Cell(
                "#lifegame-#{i}-#{j}",
                [ "#lifegame-#{i + 1}-#{j    }",
                  "#lifegame-#{i - 1}-#{j    }",
                  "#lifegame-#{i + 1}-#{j + 1}",
                  "#lifegame-#{i - 1}-#{j + 1}",
                  "#lifegame-#{i + 1}-#{j - 1}",
                  "#lifegame-#{i - 1}-#{j - 1}",
                  "#lifegame-#{i    }-#{j + 1}",
                  "#lifegame-#{i    }-#{j - 1}"
                ],
                whenBorn,
                whenLive,
                whenDead))

    lifeGame = new LifeGame.LifeGame(cellList)
    setInterval((() -> LifeGame.update(lifeGame)), 200.0)
